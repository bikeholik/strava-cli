/*
 * Strava API v3
 * Strava API
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * A row in a segment leaderboard
 */
@ApiModel(description = "A row in a segment leaderboard")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-12T15:31:53.751+01:00")
public class SegmentLeaderboardEntry {
  @SerializedName("athlete_name")
  private String athleteName = null;

  @SerializedName("elapsed_time")
  private Integer elapsedTime = null;

  @SerializedName("moving_time")
  private Integer movingTime = null;

  @SerializedName("start_date")
  private OffsetDateTime startDate = null;

  @SerializedName("start_date_local")
  private OffsetDateTime startDateLocal = null;

  @SerializedName("rank")
  private Integer rank = null;

  public SegmentLeaderboardEntry athleteName(String athleteName) {
    this.athleteName = athleteName;
    return this;
  }

   /**
   * The public name of the athlete
   * @return athleteName
  **/
  @ApiModelProperty(example = "P. Sagan", value = "The public name of the athlete")
  public String getAthleteName() {
    return athleteName;
  }

  public void setAthleteName(String athleteName) {
    this.athleteName = athleteName;
  }

  public SegmentLeaderboardEntry elapsedTime(Integer elapsedTime) {
    this.elapsedTime = elapsedTime;
    return this;
  }

   /**
   * The elapsed of the segment effort associated with this entry
   * @return elapsedTime
  **/
  @ApiModelProperty(example = "100", value = "The elapsed of the segment effort associated with this entry")
  public Integer getElapsedTime() {
    return elapsedTime;
  }

  public void setElapsedTime(Integer elapsedTime) {
    this.elapsedTime = elapsedTime;
  }

  public SegmentLeaderboardEntry movingTime(Integer movingTime) {
    this.movingTime = movingTime;
    return this;
  }

   /**
   * The moving of the segment effort associated with this entry
   * @return movingTime
  **/
  @ApiModelProperty(example = "80", value = "The moving of the segment effort associated with this entry")
  public Integer getMovingTime() {
    return movingTime;
  }

  public void setMovingTime(Integer movingTime) {
    this.movingTime = movingTime;
  }

  public SegmentLeaderboardEntry startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * The time at which the effort was started.
   * @return startDate
  **/
  @ApiModelProperty(value = "The time at which the effort was started.")
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }

  public SegmentLeaderboardEntry startDateLocal(OffsetDateTime startDateLocal) {
    this.startDateLocal = startDateLocal;
    return this;
  }

   /**
   * The time at which the effort was started in the local timezone.
   * @return startDateLocal
  **/
  @ApiModelProperty(value = "The time at which the effort was started in the local timezone.")
  public OffsetDateTime getStartDateLocal() {
    return startDateLocal;
  }

  public void setStartDateLocal(OffsetDateTime startDateLocal) {
    this.startDateLocal = startDateLocal;
  }

  public SegmentLeaderboardEntry rank(Integer rank) {
    this.rank = rank;
    return this;
  }

   /**
   * The rank of this entry in the leaderboard
   * @return rank
  **/
  @ApiModelProperty(value = "The rank of this entry in the leaderboard")
  public Integer getRank() {
    return rank;
  }

  public void setRank(Integer rank) {
    this.rank = rank;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SegmentLeaderboardEntry segmentLeaderboardEntry = (SegmentLeaderboardEntry) o;
    return Objects.equals(this.athleteName, segmentLeaderboardEntry.athleteName) &&
        Objects.equals(this.elapsedTime, segmentLeaderboardEntry.elapsedTime) &&
        Objects.equals(this.movingTime, segmentLeaderboardEntry.movingTime) &&
        Objects.equals(this.startDate, segmentLeaderboardEntry.startDate) &&
        Objects.equals(this.startDateLocal, segmentLeaderboardEntry.startDateLocal) &&
        Objects.equals(this.rank, segmentLeaderboardEntry.rank);
  }

  @Override
  public int hashCode() {
    return Objects.hash(athleteName, elapsedTime, movingTime, startDate, startDateLocal, rank);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SegmentLeaderboardEntry {\n");
    
    sb.append("    athleteName: ").append(toIndentedString(athleteName)).append("\n");
    sb.append("    elapsedTime: ").append(toIndentedString(elapsedTime)).append("\n");
    sb.append("    movingTime: ").append(toIndentedString(movingTime)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    startDateLocal: ").append(toIndentedString(startDateLocal)).append("\n");
    sb.append("    rank: ").append(toIndentedString(rank)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

