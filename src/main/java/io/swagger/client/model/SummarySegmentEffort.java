/*
 * Strava API v3
 * Strava API
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * SummarySegmentEffort
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-12T15:31:53.751+01:00")
public class SummarySegmentEffort {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("elapsed_time")
  private Integer elapsedTime = null;

  @SerializedName("start_date")
  private OffsetDateTime startDate = null;

  @SerializedName("start_date_local")
  private OffsetDateTime startDateLocal = null;

  @SerializedName("distance")
  private Float distance = null;

  @SerializedName("is_kom")
  private Boolean isKom = null;

  public SummarySegmentEffort id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * The unique identifier of this effort
   * @return id
  **/
  @ApiModelProperty(value = "The unique identifier of this effort")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public SummarySegmentEffort elapsedTime(Integer elapsedTime) {
    this.elapsedTime = elapsedTime;
    return this;
  }

   /**
   * The effort&#39;s elapsed time
   * @return elapsedTime
  **/
  @ApiModelProperty(value = "The effort's elapsed time")
  public Integer getElapsedTime() {
    return elapsedTime;
  }

  public void setElapsedTime(Integer elapsedTime) {
    this.elapsedTime = elapsedTime;
  }

  public SummarySegmentEffort startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * The time at which the effort was started.
   * @return startDate
  **/
  @ApiModelProperty(value = "The time at which the effort was started.")
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }

  public SummarySegmentEffort startDateLocal(OffsetDateTime startDateLocal) {
    this.startDateLocal = startDateLocal;
    return this;
  }

   /**
   * The time at which the effort was started in the local timezone.
   * @return startDateLocal
  **/
  @ApiModelProperty(value = "The time at which the effort was started in the local timezone.")
  public OffsetDateTime getStartDateLocal() {
    return startDateLocal;
  }

  public void setStartDateLocal(OffsetDateTime startDateLocal) {
    this.startDateLocal = startDateLocal;
  }

  public SummarySegmentEffort distance(Float distance) {
    this.distance = distance;
    return this;
  }

   /**
   * The effort&#39;s distance in meters
   * @return distance
  **/
  @ApiModelProperty(value = "The effort's distance in meters")
  public Float getDistance() {
    return distance;
  }

  public void setDistance(Float distance) {
    this.distance = distance;
  }

  public SummarySegmentEffort isKom(Boolean isKom) {
    this.isKom = isKom;
    return this;
  }

   /**
   * Whether this effort is the current best on the leaderboard
   * @return isKom
  **/
  @ApiModelProperty(value = "Whether this effort is the current best on the leaderboard")
  public Boolean isIsKom() {
    return isKom;
  }

  public void setIsKom(Boolean isKom) {
    this.isKom = isKom;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SummarySegmentEffort summarySegmentEffort = (SummarySegmentEffort) o;
    return Objects.equals(this.id, summarySegmentEffort.id) &&
        Objects.equals(this.elapsedTime, summarySegmentEffort.elapsedTime) &&
        Objects.equals(this.startDate, summarySegmentEffort.startDate) &&
        Objects.equals(this.startDateLocal, summarySegmentEffort.startDateLocal) &&
        Objects.equals(this.distance, summarySegmentEffort.distance) &&
        Objects.equals(this.isKom, summarySegmentEffort.isKom);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, elapsedTime, startDate, startDateLocal, distance, isKom);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SummarySegmentEffort {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    elapsedTime: ").append(toIndentedString(elapsedTime)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    startDateLocal: ").append(toIndentedString(startDateLocal)).append("\n");
    sb.append("    distance: ").append(toIndentedString(distance)).append("\n");
    sb.append("    isKom: ").append(toIndentedString(isKom)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

